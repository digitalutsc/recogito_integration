<?php
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Link;
use Drupal\Core\Url;


function recogito_integration_page_attachments(array &$attachments) {
  if (!\Drupal::service('router.admin_context')->isAdminRoute()) {


    $vid = \Drupal::config('recogito_integration.settings')->get('recogito_integration.annotation_vocab_name');
    $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);

    $term_array = array();
    foreach ($terms as $term) {
      $term_obj = Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($term->tid);
      array_push($term_array, $term->name);
    }
    $attachments['#attached']['drupalSettings']['recogito_integration']['taxonomy_terms'] = $term_array;

    $perms = [
      'recogito view annotations' => \Drupal::currentUser()->hasPermission('recogito view annotations'),
      'recogito create annotations' => \Drupal::currentUser()->hasPermission('recogito create annotations'),
      'recogito edit annotations' => \Drupal::currentUser()->hasPermission('recogito edit annotations'),
      'recogito delete annotations' => \Drupal::currentUser()->hasPermission('recogito delete annotations'),
      'recogito edit own annotations' => \Drupal::currentUser()->hasPermission('recogito edit own annotations'),
      'recogito delete own annotations' => \Drupal::currentUser()->hasPermission('recogito delete own annotations')
    ];
    $attachments['#attached']['drupalSettings']['recogito_integration']['permissions'] = $perms;

    $user_data = [
      'id' => \Drupal::request()->getHost() . '/user/' . \Drupal::currentUser()->id(),
      'displayName' => \Drupal::currentUser()->getDisplayName()
    ];
    $attachments['#attached']['drupalSettings']['recogito_integration']['user_data'] = $user_data;

    $attachments['#attached']['drupalSettings']['recogito_integration']['attach_attribute_type'] = \Drupal::config('recogito_integration.settings')->get('recogito_integration.attach_attribute_type');
    $attachments['#attached']['drupalSettings']['recogito_integration']['attach_attribute_name'] = \Drupal::config('recogito_integration.settings')->get('recogito_integration.attach_attribute_name');

    //$attachments['#attached']['library'][] = 'openseadragon/init';
    $attachments['#attached']['library'][] = 'recogito_integration/recogito_injection';

    return $attachments;
  }
}


function recogito_integration_entity_operation_alter(array &$operations, $entity) {
  print_log("recogito_integration_entity_operation_alter");
  $entityTypeId = $entity->getEntityTypeId();
  $nodeType = $entity->getType();
  if ($entityTypeId !== 'node') {
    return;
  }

  if ($nodeType === "annotation_collection") {
    $anno_collection_url = $entity->get('field_annotation_collection_url')->getValue()[0]['value'];
    if (str_contains($anno_collection_url, "/node/")) {
      $nodeId = explode("/",$anno_collection_url)[2];
    }
    else {
      $node = getNodeIdByAlias($anno_collection_url);
      $nodeId = $node->id();
    }


    print_log($nodeId);
    $editUrl = Url::fromRoute('entity.node.canonical', ['node' => $nodeId]);
    $operations['preview_operation'] = array(
      'title' => t('Demo'),
      'weight' => 20,
      'url' => $editUrl,
    );
  }


  $nodeId = $entity->id();
  if (in_array($nodeType, ['annotation_collection', 'annotation', 'annotation_textualbody'])) {
    // add custom operation
    $editUrl = Url::fromRoute('entity.node.canonical', ['node' => $nodeId]);
    $operations['view_operation'] = array(
      'title' => t('View'),
      'weight' => 20,
      'url' => $editUrl,
    );
  }
}


/**
 * @param $alias
 *
 * @return int|string
 */
function getNodeIdByAlias(string $alias) {
  print_log($alias);
  $node = NULL;
  $path = \Drupal::service('path_alias.manager')->getPathByAlias($alias);
  if(preg_match('/node\/(\d+)/', $path, $matches)) {
    $node = \Drupal\node\Entity\Node::load($matches[1]);
  }
  return $node;
}

/**
 * Debug function: display any variable to error log
 *
 * @param $thing
 */
if (!function_exists('print_log')) {
  function print_log($thing)
  {
    error_log(print_r($thing, true), 0);
  }

}
/**
 * Debug function: display any variable to current webpage
 * @param $thing
 */
if (!function_exists('logging')) {
  function logging($thing)
  {
    echo "<pre>";
    print_r($thing);
    echo "</pre>";
  }
}
